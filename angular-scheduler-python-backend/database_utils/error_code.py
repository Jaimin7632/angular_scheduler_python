import json

err = {10000: "Exception Occurred",
       1000: "An Unexpected error occured",
       1001: 'args keyword not found in the input parameters.',
       1002: 'One or more argument missing in request url',
       1003: 'Database Connection Failed',
       1004: 'No record found for the given parameters.',
       1005: 'Could not fetch_with_callback details for label printing',
       1006: 'Required input arguments dict is empty.',
       1007: 'Required fields list is empty.',
       1008: 'Input JSON not in valid format',
       1009: 'Input Dates not in proper format',
       1010: 'date from not in mm-dd-yy format',
       1011: 'invalid is_file',
       1012: 'Invalid Data Type',
       1013: 'Document Update Conflict',
       1014: 'Database update failed',
       1020: 'Invalid Data',
       2001: 'Some InternalSQL error occurred while creating records',
       2002: 'Duplicate keys for PrimaryKeyField detected.',
       2003: 'Integrity Error. Primary Key already exists',
       3001: 'Error occurred during file processing.',
       4001: 'The destination where file is to be moved does not exists.',
       5001: 'There are some packs in pack queue hence cannot shut down the system.',
       5002: 'There is no printer available for this system, please add printer configuration before continuing',
       5003: 'Robots are currently offline. Please contact admin.',
       5004: 'Retain_packs_on_shutdown flow error',
       5005: 'Initialize has already been pressed. Please wait for the system to initialize.',
       5006: "Doors are not properly closed. please check the dosepacker control panel and reinitialize the system.",
       5007: "Door is open, Please close the door and resume.",
       5008: "Station connection Failed. Please contact support.",
       5010: 'Some packs are left that are in progress state',
       5011: 'Some Packs are still left before news packs can be requested',
       5012: 'Unable to setup crm device ',
       5013: 'Error ocured in initialising crm componenets.',
       6001: 'CRM is not authorized hence API cannot be executed.',
       6002: 'This API is intended only for test mode not for production mode.',
       6003: 'For this API to be executed, CRM must be in pause state.',
       6004: 'Requested API for Shutdown is already in process. Please wait for response.',
       7001: 'System is not paused. Please pause the system and retry.',
       7002: 'Error code does not exists for the car. Car cannot be controlled externally.',
       7003: 'Unable to connect to the car. Please try again.',
       7004: 'Unable to access the car. Please retry after some time.',
       8001: 'Packs status cannot be updated.',
       9001: "Car pool thread isn't already initialised.",
       9002: "crm already started",
       9003: "RFID is not detected on the car. Please check the pack and try again.",
       9004: "Pack is present on the car. Please remove the pack from the car and try again.",
       9005: "Status is not correct.",
       9006: "Pack Id is not matching.",
       9007: "Button describing status for pack pressed multiple times.",
       9008: "Invalid crm_id",
       9009: "API hit for already processed pack, may be a network call error.",
       9010: "exception in api_robot_pack_processing_completed",
       9011: 'exception in get_crm_layout_dynamically',
       9012: "Retry multiple label check: FAILURE",
       9013: "Retry label drop: FAILURE",
       9014: "Heat seal not in idle state",
       9015: "Pack separator not in idle state",
       9016: "Label printer not in idle state",
       9017: 'RFID not detected',
       9018: "lower_pf_tray:failure",
       9019: "Error in lift table retry request",
       9020: "Retry Unloading Station unable to recover from previous state: FATAL ERROR",
       9021: "Remove car request: Failure, crm should be paused before removing car from AI.",
       9022: "Remove car request: Failure, car remove should be requested once to remove car from AI",
       9023: "Remove car from AI request: FAILURE"}


def error(code, *args):
    try:
        desc = err[code]
    except KeyError:
        desc = err[1000]

    for args in args:
        desc += str(args)
    return json.dumps({"code": code, "description": desc, "status": "failure"}, indent=4)
